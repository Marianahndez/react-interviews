[{"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\index.js":"1","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\reportWebVitals.js":"2","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\HomePage\\index.js":"3","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\InterviewersDashboard\\index.js":"4","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\CandidatesDashboard\\index.js":"5","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\ModalPersonAdd\\index.js":"6","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\QuestionsPage\\index.js":"7","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\SummaryPage\\index.js":"8","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\store.js":"9","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\rootReducer.js":"10","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\context.js":"11","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\interviewActions.js":"12","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\interviewTypes.js":"13","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\interviewReducers.js":"14","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\interviewerReducers.js":"15","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\candidateReducers.js":"16","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\CandidateInformation\\index.js":"17"},{"size":1670,"mtime":1609341552532,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2696,"mtime":1609341720688,"results":"21","hashOfConfig":"19"},{"size":4750,"mtime":1609341489838,"results":"22","hashOfConfig":"19"},{"size":5446,"mtime":1609367791750,"results":"23","hashOfConfig":"19"},{"size":6369,"mtime":1609366264274,"results":"24","hashOfConfig":"19"},{"size":3804,"mtime":1609299726498,"results":"25","hashOfConfig":"19"},{"size":590,"mtime":1609168096008,"results":"26","hashOfConfig":"19"},{"size":255,"mtime":1609187952273,"results":"27","hashOfConfig":"19"},{"size":422,"mtime":1609274188624,"results":"28","hashOfConfig":"19"},{"size":473,"mtime":1609209418236,"results":"29","hashOfConfig":"19"},{"size":1541,"mtime":1609185914531,"results":"30","hashOfConfig":"19"},{"size":504,"mtime":1609169694727,"results":"31","hashOfConfig":"19"},{"size":377,"mtime":1609220033921,"results":"32","hashOfConfig":"19"},{"size":577,"mtime":1609280276576,"results":"33","hashOfConfig":"19"},{"size":1016,"mtime":1609339568378,"results":"34","hashOfConfig":"19"},{"size":9697,"mtime":1609366676423,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"z0iusa",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\index.js",[],["76","77"],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\reportWebVitals.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\HomePage\\index.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\InterviewersDashboard\\index.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\CandidatesDashboard\\index.js",["78"],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\ModalPersonAdd\\index.js",["79","80","81"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Dialog, DialogContent, TextField, FormControl, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { addInterviewer, editInterviewer, deleteInterviewer, addCandidate } from '../../Redux/Interview/interviewActions';\r\n\r\n\r\nconst modalStyles = makeStyles((theme)=> ({\r\n    titleFormat: {\r\n        padding: theme.spacing(3),\r\n        margin: 0,\r\n        textAlign: 'center'\r\n    },\r\n    inputForm: {\r\n        width: '100%',\r\n        margin: theme.spacing(2, 0)\r\n    },\r\n    btnsContainer: {\r\n        padding: theme.spacing(2, 1),\r\n        float: 'right'\r\n    },\r\n    btnStyle: {\r\n        textTransform: 'inherit',\r\n        '&:first-child':{\r\n            marginRight: theme.spacing(2)\r\n        }\r\n    }\r\n}))\r\n\r\nfunction Modal({\r\n    type,\r\n    openDialog,\r\n    person,\r\n    candidate,\r\n    onChangeInputPerson,\r\n    onChangeInputCandidate,\r\n    closeDialog,\r\n    handleAddCandidate,\r\n    handleAddInterviewer,\r\n    keyID\r\n}){\r\n    const classes = modalStyles();\r\n    return(\r\n        <Dialog open={openDialog} onClose={closeDialog} fullWidth={true} maxWidth={'sm'}>\r\n            <h2 className={classes.titleFormat}>{type}</h2>\r\n            <DialogContent>\r\n            { type === 'Add Interviewer' ?\r\n                <form autoComplete=\"off\" className=\"form\" onSubmit={handleAddInterviewer}>\r\n                    <TextField name=\"name\" label=\"Name\" value={person.name} onChange={onChangeInputPerson} required className={classes.inputForm} />\r\n                    <TextField name=\"id\" label=\"ID\" value={keyID} onChange={onChangeInputPerson} required className={classes.inputForm}/>\r\n                    <TextField name=\"eid\" label=\"EID\" value={person.eid} onChange={onChangeInputPerson} required className={classes.inputForm}/>\r\n                    <div className={classes.btnsContainer}>\r\n                        <Button variant=\"contained\" color=\"secondary\" type=\"submit\" onClick={handleAddInterviewer} className={classes.btnStyle}>Save</Button>\r\n                        <Button variant=\"contained\" color=\"info\" onClick={closeDialog} className={classes.btnStyle}>Cancel</Button>\r\n                    </div>\r\n                </form>\r\n                : \r\n                <form autoComplete=\"off\" className=\"form\" onSubmit={handleAddCandidate}>\r\n                    <TextField name=\"name\" label=\"Name\" value={candidate.name} onChange={onChangeInputCandidate} required className={classes.inputForm} />\r\n                        <TextField name=\"email\" label=\"Email\" value={candidate.email} onChange={onChangeInputCandidate} required className={classes.inputForm}/>\r\n        \r\n                        <TextField name=\"typeCandidate\" label=\"Type\" value={candidate.typeCandidate} onChange={onChangeInputCandidate} required className={classes.inputForm}/>\r\n                        <div className={classes.btnsContainer}>\r\n                            <Button variant=\"contained\" color=\"secondary\" type=\"submit\" onClick={handleAddCandidate} className={classes.btnStyle}>Save</Button>\r\n                            <Button variant=\"contained\" color=\"info\" onClick={closeDialog} className={classes.btnStyle}>Cancel</Button>\r\n                        </div>\r\n                </form>\r\n            }\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nfunction ModalPersonAdd(props){\r\n    const [typeOfPerson, setTypeOfPerson] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [id, setID] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const [person, setPerson] = useState({\r\n        name: '',\r\n        id: id,\r\n        eid: '',\r\n        candidates: 0       \r\n    });\r\n    const [candidate, setCandidate] = useState({\r\n        id: id,\r\n        name: '',\r\n        email: '',\r\n        typeCandidate: '',\r\n        skills: [],\r\n        score: 20,\r\n        interviewerId: null,\r\n        questions: [],\r\n        button: ''\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(props.id === undefined){\r\n            setID(0)\r\n        }else{\r\n            setID(props.id)\r\n        }\r\n    },[props])\r\n\r\n    const handleInputChangePerson = (e, x) => {\r\n        const newInterviewer = {...person};\r\n        newInterviewer[e.target.name] = e.target.value;\r\n        e.preventDefault();\r\n        setPerson(newInterviewer)\r\n    }\r\n    \r\n    const handleInputChangeCandidate = (e) => {\r\n        const newCandidate = {...candidate};\r\n        newCandidate[e.target.name] = e.target.value;\r\n        e.preventDefault();\r\n        setCandidate(newCandidate)\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setOpen(false)\r\n        console.log('close> ', open)\r\n    }\r\n\r\n    const handleTypeOfPerson = (x) => {\r\n        setOpen(true)\r\n        setTypeOfPerson(x)\r\n    }\r\n\r\n    const postInterviewer = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addInterviewer(person));\r\n        setPerson({\r\n            name: '',\r\n            id: id,\r\n            eid: '',\r\n            candidates: 0       \r\n        })\r\n        setOpen(false)\r\n    }\r\n\r\n    const postCandidate = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addCandidate(candidate));\r\n        setCandidate({\r\n            id: null,\r\n            name: '',\r\n            email: '',\r\n            typeCandidate: '',\r\n            skills: [],\r\n            score: 20,\r\n            interviewerId: null,\r\n            questions: [],\r\n            button: ''\r\n        })\r\n        setOpen(false)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Modal \r\n            type={typeOfPerson} \r\n            openDialog={open} \r\n            person={person}\r\n            candidate={candidate}\r\n            onChangeInputPerson={handleInputChangePerson}\r\n            onChangeInputCandidate={handleInputChangeCandidate}\r\n            closeDialog={handleModalClose} \r\n            handleAddInterviewer={postInterviewer}\r\n            handleAddCandidate={postCandidate}\r\n            keyID={id}\r\n            />\r\n\r\n            <Fab color=\"secondary\" aria-label=\"add\" onClick={()=> handleTypeOfPerson(props.actionType)}>\r\n                <PersonAddOutlinedIcon />\r\n            </Fab>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ModalPersonAdd;","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\QuestionsPage\\index.js",["82","83"],"import React, { useEffect } from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport './questions.css'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { useState } from 'react';\r\nimport { RadioGroup } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { useDispatch } from 'react-redux';\r\nimport { editCandidate } from '../../Redux/Interview/interviewActions';\r\n\r\nconst questions = [\r\n    {\r\n        id: 0,\r\n        topic: 'Javascript',\r\n        content: 'Bla bla bla question here?',\r\n        correct: \"false\",\r\n        comments: ''\r\n    },\r\n    {\r\n        id: 1,\r\n        topic: 'Node JS',\r\n        content: 'Bla bla bla question here?',\r\n        correct: \"false\",\r\n        comments: ''\r\n    },\r\n]\r\n\r\nfunction Questions(props){\r\n    let history = useHistory();\r\n    let { slug } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [selectedValue, setSelectedValue] = useState(\"true\");\r\n    const [candidate, setCandidate] = useState({});\r\n\r\n    useEffect(()=>{\r\n        let aux = {}\r\n\r\n        aux = props.reducer.filter(i => {\r\n            return i.id === parseInt(slug)\r\n        });\r\n        setCandidate(aux);\r\n    },[])\r\n\r\n    const handleChange = (event) => {        \r\n        questions[event.target.id].correct = event.target.value;\r\n        setSelectedValue(event.target.value)\r\n    };\r\n\r\n    const handleNext = () =>{\r\n        history.push(\"/summary\")\r\n    }\r\n\r\n    const handleAnswers = (e) => {\r\n        e.preventDefault();\r\n        candidate[slug].questions = questions;\r\n        dispatch(editCandidate(candidate));\r\n        history.push(\"/summary\")\r\n    }\r\n\r\n    const handleChangeComments = (e) => {\r\n        questions[e.target.id].comments = e.target.value;\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <AliceCarousel disableDotsControls disableSlideInfo={false} className=\"noOverflow\">\r\n                {questions.map((question, i)=> (\r\n                    <div className=\"question-container\">\r\n                        <h2>{question.topic}</h2>\r\n                        <h5>{question.content}</h5>\r\n                        <form onSubmit={handleAnswers}>\r\n                            <RadioGroup value={selectedValue} onChange={handleChange} className=\"radiobuttons\">\r\n                                <FormControlLabel control={<Radio value=\"true\" id={i} />} label=\"Correct\" />\r\n                                <FormControlLabel control={<Radio value=\"false\" id={i} />} label=\"Incorrect\" />\r\n                            </RadioGroup>\r\n                            <TextField\r\n                            id={i}\r\n                            label=\"Comments\"\r\n                            name=\"comments\"\r\n                            value={questions.comments}\r\n                            onChange={handleChangeComments}\r\n                            multiline\r\n                            rows={4}\r\n                            defaultValue=\"Default Value\"\r\n                            variant=\"outlined\"\r\n                            />\r\n                            <div className=\"btn-container\">\r\n                                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" className=\"btnStyle\"> Finalize <ArrowForwardIosIcon className=\"iconNext\" /> </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                ))}\r\n            </AliceCarousel>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Questions;","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\SummaryPage\\index.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\store.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\rootReducer.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\context.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\interviewActions.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\interviewTypes.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\interviewReducers.js",[],"C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\interviewerReducers.js",["84","85"],"import {\r\n    ADD_INTERVIEWER,\r\n    EDIT_INTERVIEWER,\r\n    DELETE_INTERVIEWER\r\n} from './interviewTypes';\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case ADD_INTERVIEWER:\r\n            state.push({\r\n                id: state.length,\r\n                eid: action.payload.eid,\r\n                name: action.payload.name,\r\n                candidates: action.payload.candidates\r\n            })\r\n            return [...state]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\Redux\\Interview\\candidateReducers.js",["86","87","88","89"],"import {\r\n    ADD_CANDIDATE,\r\n    EDIT_CANDIDATE,\r\n    ADD_SKILLS,\r\n    EDIT_SKILLS,\r\n    SAVE_QUESTIONS,\r\n    ADD_COMMENT_SUMMARY,\r\n} from './interviewTypes';\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case ADD_CANDIDATE:\r\n            state.push({\r\n                id: state.length,\r\n                name: action.payload.name,\r\n                email: action.payload.email,\r\n                typeCandidate: action.payload.typeCandidate,\r\n                skills: [],\r\n                score: 20,\r\n                interviewerId: action.payload.interviewerId,\r\n                questions: [],\r\n                button: action.payload.button\r\n            })\r\n            return [...state]\r\n        case EDIT_CANDIDATE:\r\n            const aux = state.findIndex(i => i.id === action.payload.id)\r\n            state[aux] = action.payload;\r\n            return [...state]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","C:\\Users\\mariana.hernandez\\Documents\\@mariana.hernandez\\React AcademyCourse\\accenture-react-project\\src\\components\\CandidateInformation\\index.js",["90","91"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { editCandidate } from '../../Redux/Interview/interviewActions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Dialog, DialogContent, FormControlLabel, FormGroup, Button, Card, CardContent, Avatar, Checkbox, ListItemIcon, ListItem, ListItemAvatar } from '@material-ui/core';\r\n\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport StarRateRoundedIcon from '@material-ui/icons/StarRateRounded';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst candidateStyles = makeStyles((theme)=> ({\r\n    center: {\r\n        textAlign: 'center'\r\n    },\r\n    flex: {\r\n        display: 'flex'\r\n    },\r\n    title: {\r\n        ...theme.typography.h6,\r\n        fontWeight: '600',\r\n        margin: theme.spacing(1, 0)\r\n    },\r\n    infoText: {\r\n        ...theme.typography.subtitle1,\r\n        margin: theme.spacing(0)\r\n    },\r\n    iconSize: {\r\n        fontSize: '5rem',\r\n    },\r\n    avatar: {\r\n        padding: theme.spacing(4),\r\n        marginTop: theme.spacing(1.5)\r\n    },\r\n    infoBox: {\r\n        padding: theme.spacing(2, 6, 4, 6)\r\n    },\r\n    skillsBox: {\r\n        padding: theme.spacing(2, 6, 4, 6),\r\n        height: '40vh'\r\n    },\r\n    subtitle: {\r\n        fontSize: '0.7rem',\r\n        fontStyle: 'italic',\r\n        marginTop: '1.3rem',\r\n    },\r\n    titleAddSkills: {\r\n        margin: '1rem 0 1rem 0',\r\n        fontSize: '1.2rem',\r\n        fontWeight: '100',\r\n        fontStyle: 'italic'\r\n    },\r\n    extendedIcon: {\r\n        margin: theme.spacing(2, 1)\r\n    },\r\n    mainCard: {\r\n        width: '90%'\r\n    },\r\n    addBtnSkills: {\r\n        textTransform: 'inherit',\r\n        float: 'right',\r\n        margin: theme.spacing(3, 2)\r\n    },\r\n    paddingTop: {\r\n        paddingTop: theme.spacing(4)\r\n    },\r\n    modalSkillsContainer: {\r\n        width: '80%',\r\n        margin: '0 auto',\r\n    },\r\n    modalTitle: {\r\n        margin: theme.spacing(0, 4, 2, 4)\r\n    },\r\n    modalBtns: {\r\n        padding: theme.spacing(3, 0),\r\n        width: '100%',\r\n        '& :nth-child(2)': {\r\n            float: 'right'\r\n        }\r\n    },\r\n    iconList: {\r\n        minWidth: '10%'\r\n    },\r\n    textList: {\r\n        fontSize: '1.1rem',\r\n        margin: '0 0 5px 0',\r\n        fontWeight: '400'\r\n    },\r\n    btn: {\r\n        textTransform: 'inherit'\r\n    },\r\n    btnContainer: {\r\n        width: '100%',\r\n        padding: theme.spacing(4),\r\n        '& button' : {\r\n          float: 'right'  \r\n        }\r\n    }\r\n}))\r\n\r\n\r\nconst skillsArray = [\r\n    {\r\n        name: 'Bootstrap',\r\n        checked: false\r\n    },\r\n    {\r\n        name: 'Node JS',\r\n        checked: false\r\n    },\r\n    {\r\n        name: 'React JS',\r\n        checked: false\r\n    },\r\n    {\r\n        name: 'Vue JS',\r\n        checked: false\r\n    },\r\n    {\r\n        name: 'Angular 6+',\r\n        checked: false\r\n    },\r\n]\r\n\r\nfunction Modal({\r\n    openDialog,\r\n    candidate,\r\n    onChangeInputPerson,\r\n    closeDialog,\r\n    classes,\r\n    handleAddSkills\r\n}){\r\n    const [skills, setSkills] = useState(skillsArray)\r\n    \r\n    const handleChange = (event) => {\r\n        setSkills([...skillsArray, skillsArray[event.target.id].checked = event.target.checked])\r\n    };\r\n\r\n    return(\r\n        <Dialog open={openDialog} onClose={closeDialog} fullWidth={true} maxWidth={'xs'}>\r\n            <DialogContent>\r\n                <h2 className={classes.modalTitle}>Skills to evaluate</h2>\r\n                <div>\r\n                <FormGroup row className={classes.modalSkillsContainer}>\r\n                    {skillsArray.map((element, i) => (\r\n                        <FormControlLabel\r\n                        control={<Checkbox id={i} checked={element.checked} onChange={handleChange} name={element.name} />}\r\n                        label={element.name} />\r\n                    ))}\r\n                    <div className={classes.modalBtns}>\r\n                        <Button variant=\"contained\" onClick={closeDialog} className={classes.btn}>Cancel</Button>\r\n                        <Button color=\"secondary\" variant=\"contained\" onClick={()=>handleAddSkills(skills)} className={classes.btn}>Save</Button>\r\n                    </div>\r\n                </FormGroup>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nfunction CandidateInformation(props){\r\n    let { slug } = useParams();\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    const classes = candidateStyles();\r\n    const [candidate, setCandidate] = useState({});\r\n    const [skills, setSkills] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        let aux = {}\r\n        aux = props.reducer.filter(i => {\r\n            return i.id === parseInt(slug)\r\n        });\r\n        setCandidate(aux[0]);\r\n        \r\n        if(candidate.skills !== undefined){\r\n            setSkills(candidate.skills)\r\n        }\r\n        console.log('skills:  ', skills)\r\n    },[])\r\n\r\n    const handleInputChange = (e, x) => {\r\n        const newInterviewer = {...candidate};\r\n        newInterviewer[e.target.name] = e.target.value;\r\n        e.preventDefault();\r\n        setCandidate(newInterviewer)\r\n    }\r\n\r\n    const handleModalClose = () =>{\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleAddSkills = () =>{\r\n        setOpen(true)\r\n    }\r\n    \r\n    const handleSaveSkills = (i) =>{\r\n        candidate.skills = i;\r\n        setSkills(i)\r\n        dispatch(editCandidate(candidate));\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleSaveCandidate = () =>{\r\n        dispatch(editCandidate(candidate))\r\n        history.push(\"/candidates\")\r\n    }\r\n\r\n    console.log('candidate data> ', candidate)\r\n    return(\r\n        <Grid container className={classes.paddingTop}>\r\n            <Grid item xs={6} className={classes.flex}>\r\n                <Card className={classes.mainCard}>\r\n                <CardContent className={classes.flex}>\r\n                <Grid item xs={2}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <AccountCircleIcon className={classes.iconSize} />\r\n                    </Avatar>\r\n                </Grid>\r\n                <Grid item xs={10} className={classes.infoBox}>\r\n                    <h2 className={classes.title}>Nombre Completo</h2>\r\n                    <p className={classes.infoText}>{candidate.name}</p>\r\n                    <h2 className={classes.title}>Email</h2>\r\n                    <p className={classes.infoText}>{candidate.email}</p>\r\n                    <h2 className={classes.title}>Type of candidate</h2>\r\n                    <p className={classes.infoText}>{candidate.typeCandidate}</p>\r\n                </Grid>\r\n                </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={6} className={classes.flex}>\r\n                <Card className={classes.mainCard}>\r\n                    <CardContent className={classes.flex}>\r\n                        <Grid item xs={2}>\r\n                            <Avatar className={classes.avatar}>\r\n                                <ExtensionIcon className={classes.iconSize} />\r\n                            </Avatar>\r\n                        </Grid>\r\n                        <Grid item xs={10} className={classes.skillsBox}>\r\n                            <p className={classes.title}>Skills to evaluate</p>\r\n                            <Modal\r\n                            openDialog={open} \r\n                            candidate={candidate}\r\n                            onChangeInputPerson={handleInputChange}\r\n                            closeDialog={handleModalClose} \r\n                            classes={classes}\r\n                            handleAddSkills={(inputSkills)=>handleSaveSkills(inputSkills)}\r\n                            />\r\n                            \r\n                            {skills === [] ?\r\n                                <p className={classes.titleAddSkills}>No skills found</p>\r\n                                :\r\n                                <div>\r\n                                    {skills.map((element, i)=>(\r\n                                            <React.Fragment>{element.checked === true ?\r\n                                            <ListItem>\r\n                                                <ListItemIcon className={classes.iconList}>\r\n                                                    <StarRateRoundedIcon />\r\n                                                </ListItemIcon>\r\n                                                <p className={classes.textList}>{element.name}</p> \r\n                                            </ListItem>\r\n                                            : null}\r\n                                            </React.Fragment>\r\n                                    ))}\r\n                                </div>\r\n                            }\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <Fab variant=\"extended\" color=\"secondary\" aria-label=\"add\" onClick={handleAddSkills} className={classes.addBtnSkills}>\r\n                        <AddOutlinedIcon className={classes.extendedIcon} /> Add Skills\r\n                    </Fab>\r\n                </Card>\r\n            </Grid>\r\n            <div className={classes.btnContainer}>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={handleSaveCandidate} className={classes.btn}>Save</Button>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CandidateInformation;",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":73,"column":28,"nodeType":"98","messageId":"99","endLine":73,"endColumn":45},{"ruleId":"96","severity":1,"message":"100","line":6,"column":44,"nodeType":"98","messageId":"99","endLine":6,"endColumn":55},{"ruleId":"96","severity":1,"message":"101","line":9,"column":26,"nodeType":"98","messageId":"99","endLine":9,"endColumn":41},{"ruleId":"96","severity":1,"message":"102","line":9,"column":43,"nodeType":"98","messageId":"99","endLine":9,"endColumn":60},{"ruleId":"103","severity":1,"message":"104","line":47,"column":7,"nodeType":"105","endLine":47,"endColumn":9,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"107","line":54,"column":11,"nodeType":"98","messageId":"99","endLine":54,"endColumn":21},{"ruleId":"96","severity":1,"message":"108","line":3,"column":5,"nodeType":"98","messageId":"99","endLine":3,"endColumn":21},{"ruleId":"96","severity":1,"message":"109","line":4,"column":5,"nodeType":"98","messageId":"99","endLine":4,"endColumn":23},{"ruleId":"96","severity":1,"message":"110","line":4,"column":5,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"111","line":5,"column":5,"nodeType":"98","messageId":"99","endLine":5,"endColumn":16},{"ruleId":"96","severity":1,"message":"112","line":6,"column":5,"nodeType":"98","messageId":"99","endLine":6,"endColumn":19},{"ruleId":"96","severity":1,"message":"113","line":7,"column":5,"nodeType":"98","messageId":"99","endLine":7,"endColumn":24},{"ruleId":"96","severity":1,"message":"114","line":8,"column":131,"nodeType":"98","messageId":"99","endLine":8,"endColumn":145},{"ruleId":"103","severity":1,"message":"115","line":186,"column":7,"nodeType":"105","endLine":186,"endColumn":9,"suggestions":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'setURLInformation' is assigned a value but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'editInterviewer' is defined but never used.","'deleteInterviewer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.reducer' and 'slug'. Either include them or remove the dependency array.","ArrayExpression",["119"],"'handleNext' is assigned a value but never used.","'EDIT_INTERVIEWER' is defined but never used.","'DELETE_INTERVIEWER' is defined but never used.","'ADD_SKILLS' is defined but never used.","'EDIT_SKILLS' is defined but never used.","'SAVE_QUESTIONS' is defined but never used.","'ADD_COMMENT_SUMMARY' is defined but never used.","'ListItemAvatar' is defined but never used.","React Hook useEffect has missing dependencies: 'candidate.skills', 'props.reducer', 'skills', and 'slug'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSkills' needs the current value of 'candidate.skills'.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [props.reducer, slug]",{"range":"125","text":"126"},"Update the dependencies array to be: [candidate.skills, props.reducer, skills, slug]",{"range":"127","text":"128"},[1493,1495],"[props.reducer, slug]",[5170,5172],"[candidate.skills, props.reducer, skills, slug]"]